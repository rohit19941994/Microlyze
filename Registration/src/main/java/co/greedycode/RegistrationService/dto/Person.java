/*
 * Your Service Definition Using Internal JSON Schema
 * This is user Service API definition to enable its consumers to create, query, update details, and delete resource.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package co.greedycode.RegistrationService.dto;

import java.util.Objects;
import java.util.Arrays;
import co.greedycode.RegistrationService.dto.CoreBioGraphic;
import co.greedycode.RegistrationService.dto.NaturalPerson;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.io.Serializable;

/**
 * Person
 */
@lombok.Builder @lombok.AllArgsConstructor @com.fasterxml.jackson.annotation.JsonInclude(com.fasterxml.jackson.annotation.JsonInclude.Include.NON_NULL)
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Person implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_NATURAL_PERSON = "naturalPerson";
  @SerializedName(SERIALIZED_NAME_NATURAL_PERSON)
  private NaturalPerson naturalPerson;

  public static final String SERIALIZED_NAME_CORE_BIO_GRAPHIC = "coreBioGraphic";
  @SerializedName(SERIALIZED_NAME_CORE_BIO_GRAPHIC)
  private CoreBioGraphic coreBioGraphic;

  public Person() { 
  }

  public Person naturalPerson(NaturalPerson naturalPerson) {
    
    this.naturalPerson = naturalPerson;
    return this;
  }

   /**
   * Get naturalPerson
   * @return naturalPerson
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public NaturalPerson getNaturalPerson() {
    return naturalPerson;
  }


  public void setNaturalPerson(NaturalPerson naturalPerson) {
    this.naturalPerson = naturalPerson;
  }


  public Person coreBioGraphic(CoreBioGraphic coreBioGraphic) {
    
    this.coreBioGraphic = coreBioGraphic;
    return this;
  }

   /**
   * Get coreBioGraphic
   * @return coreBioGraphic
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CoreBioGraphic getCoreBioGraphic() {
    return coreBioGraphic;
  }


  public void setCoreBioGraphic(CoreBioGraphic coreBioGraphic) {
    this.coreBioGraphic = coreBioGraphic;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Person person = (Person) o;
    return Objects.equals(this.naturalPerson, person.naturalPerson) &&
        Objects.equals(this.coreBioGraphic, person.coreBioGraphic);
  }

  @Override
  public int hashCode() {
    return Objects.hash(naturalPerson, coreBioGraphic);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Person {\n");
    sb.append("    naturalPerson: ").append(toIndentedString(naturalPerson)).append("\n");
    sb.append("    coreBioGraphic: ").append(toIndentedString(coreBioGraphic)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

